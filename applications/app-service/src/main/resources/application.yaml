server:
  port: 8081
spring:
  application:
    name: "capacity-ms"
  devtools:
    add-properties: false
  profiles:
    include: null
  r2dbc:
    url: "r2dbc:postgresql://${DATABASE_HOST}:5432/${DATABASE_NAME}?currentSchema=${DATABASE_SCHEMA}&sslMode=require"
    username: ${DATABASE_USER}
    password: ${DATABASE_PASSWORD}
    pool:
      initial-size: 10
      max-size: 20
      max-idle-time: "30m"
      validation-query: "SELECT 1"
management:
  endpoints:
    web:
      exposure:
        include: "health,prometheus"
  endpoint:
    health:
      probes:
        enabled: true
  health:
    circuitbreakers:
      enabled: true
cors:
  allowed-origins: ${ALLOWED_ORIGINS}
adapter:
  restconsumer:
    timeout: 5000
    url: ${TECHNOLOGY_ENDPOINT}
resilience4j:
  circuitbreaker:
    instances:
      associateTechnology:
        registerHealthIndicator: true
        failureRateThreshold: 50
        slowCallRateThreshold: 50
        slowCallDurationThreshold: "2s"
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        minimumNumberOfCalls: 10
        waitDurationInOpenState: "10s"
      findByCapacityId:
        registerHealthIndicator: true
        failureRateThreshold: 50
        slowCallRateThreshold: 50
        slowCallDurationThreshold: "2s"
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        minimumNumberOfCalls: 10
        waitDurationInOpenState: "10s"
      findAll:
        registerHealthIndicator: true
        failureRateThreshold: 50
        slowCallRateThreshold: 50
        slowCallDurationThreshold: "2s"
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        minimumNumberOfCalls: 10
        waitDurationInOpenState: "10s"

